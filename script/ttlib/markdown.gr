import "stream.gr"
export func markdown_compile(mdstr: string)(stringstream) {
    var inStr = @stringstream(mdstr, false);
    var outStr: string = "";
    loop {
        if(inStr.EOF) {
            outStr ~= EOFaction();
            break;
        };
        inStr = inStr.inc;
        outStr ~= style(inStr.line);
    }
    return @stringstream(outStr, false);
}

var linelist_enable: bool = false;
var starstrong_enable: bool = false;
var underlinestrong_enable: bool = false;
var staritalic_enable: bool = false;
var underlineitalic_enable: bool = false;
func EOFaction()(string) {0
    if(linelist_enable) return "</ul>";
    if(starstrong_enable) return "</strong>";
    if(underlinestrong_enable) return "</strong>";
    if(staritalic_enable) return "</em>";
    if(underlineitalic_enable) return "</em>";

    linelist_enable = false;
    starstrong_enable = false;
    underlinestrong_enable = false;
    staritalic_enable = false;
    underlineitalic_enable = false;

    return "";
}
func style(str: string)(string) {
    if(str.slice(0,0) == "#") {
        if(str.slice(1,1) == "#") {
            if(str.slice(2,2) == "#") {
                if(str.slice(3,3) == "#") {
                    if(str.slice(4,4) == "#") {
                        str.remove(0,5);
                        str.insert(0,"</p><h5>");
                        str ~= "</h5><p>";
                        return str;
                    } else {
                        str.remove(0,4);
                        str.insert(0,"</p><h4>");
                        str ~= "</h4><p>";
                        return str;
                    }
                } else {
                    str.remove(0,3);
                    str.insert(0,"</p><h3>");
                    str ~= "</h3><p>";
                    return str;
                }
            } else {
                str.remove(0,2);
                str.insert(0,"</p><h2>");
                str ~= "</h2><p>";
                return str;
            }
        } else {
            str.remove(0,1);
            str ~= "</p></h1>";
            str.insert(0,"<h1><p>");
            return str;
        }
    }
    if(str.slice(str:size as <int> - 3 as <int>, str:size as <int> - 2) == "  ") {
        str.insert(str:size,"<br>");
    }

    loop(i, str:size) {
        if(str.slice(i,i) != " " && str.slice(i,i) != " " && str.slice(i,i) != "-") {
            if(linelist_enable) {
                linelist_enable = false;
                str.insert(0,"</ul>");
            }
            break;
        }
        else if(str.slice(i,i) == "-") {
            str.remove(i);
            if(!linelist_enable) {
                linelist_enable = true;
                str.insert(i, "<ul><li>");
            } else str.insert(i, "<li>");
            str.insert(str:size, "</li>");
            break;
        } else
        if(i as <uint> == str:size && (str.slice(i,i) == " " || str.slice(i,i) == " ") && linelist_enable) {
            linelist_enable = false;
            str.insert(i, "</ul>");
        }
    }

    var i = 0;
    loop{
        if(i > str:size as <int>) break;

        if(str.slice(i,i+1) == "**" && !starstrong_enable) {
            starstrong_enable = true;
            remove(str, i , i+1);
            str.insert(i,"<strong>");
            i += 1;
        } else
        if (str.slice(i,i+1) == "**" && starstrong_enable) {
            starstrong_enable = false;
            remove(str, i , i+1);
            str.insert(i,"</strong>");
            i += 1;
        } else
        if(str.slice(i,i+1) == "__" && !underlinestrong_enable) {
            underlinestrong_enable = true;
            remove(str, i , i+1);
            str.insert(i,"<strong>");
            i += 1;
        } else
        if (str.slice(i,i+1) == "__" && underlinestrong_enable) {
            underlinestrong_enable = false;
            remove(str, i , i+1);
            str.insert(i,"</strong>");
            i += 1;
        } else
        if(str.slice(i,i) == "*" && str.slice(i+1,i+1) != "*" && !staritalic_enable) {
            staritalic_enable = true;
            remove(str, i , i);
            str.insert(i,"<em>");
        } else
        if (str.slice(i,i) == "*" && str.slice(i+1,i+1) != "*" && staritalic_enable) {
            staritalic_enable = false;
            remove(str, i , i);
            str.insert(i,"</em>");
        } else
        if(str.slice(i,i) == "_" && str.slice(i+1,i+1) != "_" && !underlineitalic_enable) {
            underlineitalic_enable = true;
            remove(str, i , i);
            str.insert(i,"<em>");
        } else
        if (str.slice(i,i) == "_" && str.slice(i+1,i+1) != "_" && underlineitalic_enable) {
            underlineitalic_enable = false;
            remove(str, i , i);
            str.insert(i,"</em>");
        }
        i += 1;
    }
    return str;
}